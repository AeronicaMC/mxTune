
// For those who want the bleeding edge
buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
		}	
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r'
    }
}

plugins {
    id "org.sonarqube" version "3.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

ext.buildProperties = file "build.properties"

buildProperties.withReader {
    def properties = new Properties()
    properties.load(it)
    ext.config = new ConfigSlurper().parse properties
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}

version = "${config.modVersionMajor}.${config.modVersionMinor}.${config.modVersionRev}-${config.versionType}.${config.typeVersion}"
// version = "${config.modVersionMajor}.${config.modVersionMinor}.${config.modVersionRev}"
group = "net.aeronica.mods.mxtune"
archivesBaseName = "mxtune-${config.minecraftVersion}"

configurations {
    shadow
    compile.extendsFrom shadow
}

minecraft {
    version = "${config.minecraftVersion}-${config.forgeVersion}"
    runDir = "${config.runDir}"
	mappings = "${config.forgeMappings}"
    
    replaceIn "net/aeronica/mods/mxtune/Reference.java"
    replace "{@VERSION}", project.version
}

dependencies {
    // These 3 compileOnly lines are for travis CI and sonarcloud using openjdk11. it provides the missing
    // javax/jakarta/net-beans xml related stuff removed from java 10+
    compileOnly 'com.sun.activation:javax.activation:1.2.0'
    compileOnly 'javax.xml.bind:jaxb-api:2.3.0'
    compileOnly 'com.sun.xml.bind:jaxb-core:2.3.0'

    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${config.minecraftVersion}:${config.jeiVersion}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${config.minecraftVersion}:${config.jeiVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.addAll(['-Xlint:unchecked', '-Xlint:deprecation'])
}

shadowJar {
    // only include compile time dependencies
    configurations = [project.configurations.compile]
	archiveName = tasks.jar.archiveName
    // relocate 'de.johni0702.minecraft.gui', 'net.aeronica.shadowedlibs.de.johni0702.minecraft.gui'
    // relocate 'assets/jgui', 'assets/mxtune/jgui'
}

reobfJar {
    setJar(tasks.shadowJar.archivePath)
}
reobfJar.dependsOn shadowJar

jar {
    configurations.shadow.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
    manifest {
	    attributes 'FMLAT': 'mxtune_at.cfg'
	}
}
jar.dependsOn shadowJar
jar.enabled = false

processResources {
    // Exclude the GIMP image files
    exclude '**/*.xcf'

    // Exclude the Cubik model files
    exclude '**/*.bdc3D'

    // Exclude the Paint.NET image files
    exclude '**/*.pdn'
    
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

sonarqube {
    properties {
        property "sonar.organization", "aeronicamc"
        property "sonar.projectKey", "AeronicaMC_mxTune"
        property "sonar.branch.name", "1.12"
        //property "sonar.branch.name", "${config.projectBranch}"
        //property "sonar.coverage.exclusions", "**/*"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty("keyStore")
    }
     
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build {
    dependsOn signJar
}

